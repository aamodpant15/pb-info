{"version":3,"sources":["UI/Button/button.module.css","toolbar.module.css","Person.module.css","UI/Modal/Modal.module.css","UI/Backdrop/Backdrop.module.css","UI/Menu/Menu.module.css","DataStructure/memba.js","DataStructure/treeNode.js","DataStructure/tree.js","UI/Button/Button.js","toolbar.js","hoc/Aux.js","person.js","DataStructure/output.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","UI/Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Memba","first_name","last_name","key","father_name","mother_name","dob","pob","number","address","spouse_name","native_place","education","job","this","TreeNode","data","mother","father","spouse","children","Tree","require","nodes","names","getAllIndexes","val","i","indexes","length","push","console","log","getFullName","node","json_memba","memba","spouse_info","educ_info","Node","split","trim","mem","father_first_name","indices","j","includes","index","indexOf","parent","Button","props","className","styles","onClick","Toolbar","useState","typeOfSearch","setTypeOfSearch","type","onChange","nameInputHandler","value","event","target","submitPressedHandler","clearPressedHandler","Aux","React","memo","showInfo","setShowInfo","extraInfo","Person","curr","getFatherClicked","getMotherClicked","getSpouseClicked","getChildrenClicked","getAncestorClicked","Output","persons","map","getRelative","getChildrenHandler","getAncestors","backdrop","show","Backdrop","clicked","modalClosed","Modal","style","transform","opacity","Menu","App","wordToSearch","setWordToSearch","output","setOutput","authorized","setAuthorized","username","setUsername","password","setPassword","login","copyArr","toLowerCase","searchName","searchAddress","child","relation","count","unshift","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.040dd33a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__3xIb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"toolbar_Toolbar__mE-yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__1MQta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__3369Q\"};","class Memba {\n    constructor(first_name, last_name, key, father_name, mother_name, dob, pob, number, address, spouse_name, native_place, education, job){\n        this.key = key\n        this.first_name = first_name\n        this.last_name = last_name\n        this.father_name = father_name\n        this.mother_name = mother_name\n        this.dob = dob\n        this.pob = pob\n        this.number = number\n        this.address = address\n        this.spouse_name = spouse_name\n        this.native_place = native_place\n        this.education = education\n        this.job = job\n    }\n}\n\nexport default Memba;","function TreeNode(data){\n    this.key = data.key;\n    this.data = data;\n    this.mother = null;\n    this.father = null;\n    this.spouse = null;\n    this.children = [];\n}\n\nexport default TreeNode;","import Memba from './memba';\nimport Node from './treeNode';\n\nfunction Tree() {\n    //attributes= [\"first_name\", \"father_name\", \"mother_name\", \"last_name\", \"dob\", \"pob\", \"number\", \"spouse_info\", \"address\", \"native_place\", \"educ_info\", \"job_info\", \"f\", \"note\", \"email\"]\n    const data = require('./test.json');\n    const nodes = [];\n    const names = [];\n\n    const getAllIndexes = (val) => {\n        let indexes = [], i;\n        for (i = 0; i < names.length; i++)\n            if (names[i] === val)\n                indexes.push(i);\n        console.log(\"    \"+val+\" found at: \"+indexes)\n        return indexes;\n    }\n\n    const getFullName = (node) => {\n        if (node != null) {\n            return node.data.first_name + \" \" + node.data.last_name;\n        }\n    }\n\n    //create nodes\n    for (let i = 0; i < data.length; i += 1) {\n        const json_memba = data[i];\n        const memba = new Memba(json_memba.first_name, json_memba.last_name, i, json_memba.father_name, json_memba.mother_name, json_memba.dob, json_memba.pob, json_memba.number, json_memba.address, json_memba.spouse_info, json_memba.native_place, json_memba.educ_info, json_memba.job)\n        const node = new Node(memba);\n        nodes.push(node);\n        names.push(node.data.first_name.split(/[^A-Za-z]/)[0].trim())\n    }\n\n    // console.log(names);\n    // add mother,father,children\n\n\n    for (let i = 0; i < nodes.length; i += 1) {\n\n\n\n        // Getting person\n        const mem = nodes[i];\n        console.log(\"Person: \"+mem.data.first_name);\n\n        // Extracting first word of father's name to compare\n        const father_first_name = mem.data.father_name.split(/[^A-Za-z]/)[0];\n        // console.log(\"Looking for father: \"+ father_first_name);\n\n        // Alternative to X\n        console.log(\"    Searching for father: \"+father_first_name)\n        const indices = getAllIndexes(father_first_name);\n        for (let j = 0; j < indices.length; j += 1) {\n            console.log(\"    Looking at father: \"+nodes[indices[j]].data.first_name)\n            console.log(nodes[indices[j]].data.spouse_name.split(/[^A-Za-z]/)[0], mem.data.mother_name);\n            if (nodes[indices[j]].data.spouse_name.split(/[^A-Za-z]/)[0] === mem.data.mother_name.split(/[^A-Za-z]/)[0]) {\n                console.log(\"    father found!\")\n                nodes[indices[j]].children.push(mem);\n                nodes[indices[j]].children[nodes[indices[j]].children.length - 1].father = nodes[indices[j]];\n            }\n        }\n\n        // // Checking if the name occurs in the list--- X\n        // if (names.includes(father_first_name)) {\n        //     // console.log(\"Father found\");\n        //     let index = names.indexOf(father_first_name);\n        //     nodes[index].children.push(mem);\n        //     nodes[index].children[nodes[index].children.length - 1].father = nodes[index];\n        // }\n    }\n\n    // Add spouses\n    for (let i = 0; i < nodes.length; i += 1) {\n        const mem = nodes[i];\n        if (names.includes(mem.data.spouse_name.split(/[^A-Za-z]/)[0])) {\n            if (mem.spouse == null) {\n                let index = names.indexOf(mem.data.spouse_name.split(/[^A-Za-z]/)[0]);\n                nodes[index].spouse = mem;\n                nodes[index].spouse.spouse = nodes[index];\n            }\n        }\n    }\n\n    // Add mothers\n    for (let i = 0; i < nodes.length; i += 1) {\n        const mem = nodes[i];\n\n        for (let j = 0; j < nodes.length; j += 1) {\n            const parent = nodes[j];\n            if (parent.spouse !== null && mem.father !== null) {\n                if (getFullName(parent.spouse) === getFullName(mem.father)) {\n                    mem.mother = parent;\n                    parent.children.push(mem);\n                    break;\n                }\n            }\n        }\n\n        // if (names.includes(mem.data.mother_name.split(/[^A-Za-z]/)[0])) {\n        //     let index = names.indexOf(mem.data.mother_name.split(/[^A-Za-z]/)[0]);\n        //     nodes[index].children.push(mem);\n        //     nodes[index].children[nodes[index].children.length - 1].mother = nodes[index];\n        // }\n    }\n\n\n\n    return nodes;\n}\n\nexport default Tree;","import React from 'react';\nimport styles from './button.module.css';\n\nconst Button = (props) =>{\n    return <button\n    className={styles.Button}\n    onClick={props.onClick}>\n        {props.children}\n    </button>\n} \n\nexport default Button;","import React, { useState } from 'react';\nimport Button from './UI/Button/Button';\n\nconst Toolbar = (props) => {\n    const [typeOfSearch, setTypeOfSearch] = useState(\"Search by name\");\n\n    const handleSelection = (event) => {\n        setTypeOfSearch(event.target.value);\n    }\n\n    return <div>\n        \n        <input type=\"text\" onChange={props.nameInputHandler}/>\n        {'   '}\n        <select value={typeOfSearch} onChange={handleSelection}>\n            <option>Search by name</option>\n            <option>Search by address</option>\n        </select>\n        <br />\n        <br />\n        <Button onClick={() => props.submitPressedHandler(typeOfSearch)}>Submit</Button>\n        <Button onClick={props.clearPressedHandler}>Clear</Button>\n    </div>\n}\n\nexport default Toolbar;","const Aux = props => props.children;\n\nexport default Aux;","import React, { useState } from 'react';\nimport styles from './Person.module.css';\nimport Aux from './hoc/Aux';\nimport Button from './UI/Button/Button';\n\nconst Person = (props) => {\n    const [showInfo, setShowInfo] = useState([false, \"Show More\"]);\n    if (props.memba == null) { return null; }\n    const mem = props.memba.data;\n\n    const showMoreHandler = () => {\n        const curr = showInfo[0];\n        const str = (curr) ? \"Show More\" : \"Show Less\";\n        setShowInfo([!curr, str]);\n    }\n\n    //<p>ID: <strong>{mem.key}</strong></p>\n\n    let extraInfo = showInfo[0] ? < Aux >\n        <p> Father : < strong > {mem.father_name} </strong> </p>\n        <p> Mother: < strong > {mem.mother_name} </strong></p>\n        <p> Place of Birth: < strong > {mem.pob} </strong></p>\n        <p> Number: < strong > {mem.number} </strong></p>\n        <p> Address: < strong > {mem.address} </strong></p>\n        <p> Spouse Name: < strong > {mem.spouse_name} </strong> </p>\n        <p> Native Place: < strong > {mem.native_place} </strong></p>\n        <p> Education: < strong > {mem.education} </strong></p>\n    </Aux> : null;\n    return (<div className={styles.Person} >\n        <p> Name: < strong > {mem.first_name + \" \" + mem.last_name} </strong></p>\n        <p> DOB: < strong > {mem.dob} </strong></p> {extraInfo}\n\n        <Button onClick={showMoreHandler}>\n            <b > {showInfo[1]} </b></Button>\n        <br />\n        <Button onClick={\n            () => props.getFatherClicked(props.memba, \"father\")} > Show father </Button>\n        <Button onClick={\n            () => props.getMotherClicked(props.memba, \"mother\")} > Show mother </Button>\n        <Button onClick={\n            () => props.getSpouseClicked(props.memba, \"spouse\")} > Show spouse </Button>\n        <Button onClick={\n            () => props.getChildrenClicked(props.memba)} > Show Children </Button>\n        <Button onClick={\n            () => props.getAncestorClicked(props.memba)} > Show Lineage </Button>\n    </div>\n    );\n}\n\nexport default React.memo(Person);","import React from 'react';\nimport Person from '../person';\n\nconst Output = (props) => props.persons.map((memba) => {\n    return (\n        <Person\n            key={memba.key}\n            getFatherClicked={props.getRelative}\n            getMotherClicked={props.getRelative}\n            getChildrenClicked={props.getChildrenHandler}\n            getSpouseClicked={props.getRelative}\n            getAncestorClicked={props.getAncestors}\n            memba={memba}\n        />\n    );\n});\n\nexport default Output;","import React from 'react';\nimport styles from './Backdrop.module.css';\n\n\nconst backdrop = (props) =>{\n    console.log(\"[Backdrop.js] showBackdrop: \", props.show);\n    if(props.show){\n        return (\n            <div className={styles.Backdrop}\n                onClick={props.clicked}/>\n        );\n    } else return null;\n}\n\nexport default backdrop;","import React from 'react';\nimport styles from './Modal.module.css';\nimport Aux from '../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop'\n\nconst Modal = (props) => {\n    console.log(\"[Modal.js] showModal=\", props.show);\n    return (\n        <Aux>\n            <Backdrop show={props.show}\n                clicked={props.modalClosed}/>\n            <div\n                className={styles.Modal}\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n}\n\nexport default React.memo(Modal);","import React from 'react';\nimport styles from './Menu.module.css';\n\nconst Menu = (props) => {\n    return <header className={styles.Menu}>\n        <div>\n            <h2><strong>Pant Balekundri Family Information</strong></h2 >\n        </div >\n    </header >\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport './App.css';\nimport Tree from './DataStructure/tree';\nimport Toolbar from './toolbar';\nimport styles from './toolbar.module.css';\nimport Output from './DataStructure/output';\nimport Modal from './UI/Modal/Modal';\nimport Menu from './UI/Menu/Menu';\n\nconst nodes = new Tree();\nconst USER_NAME = \"admin\";\nconst PASS = \"pbinfo\";\n\nfunction App() {\n  const [wordToSearch, setWordToSearch] = useState(\"\");\n  const [output, setOutput] = useState([]);\n  const [authorized, setAuthorized] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    if (username === USER_NAME && password === PASS) {\n      setAuthorized(true);\n    }\n  }\n\n  const usernameInputHandler = (event) => {\n    setUsername(event.target.value);\n  }\n\n  const passwordInputHandler = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const searchName = () => {\n    const copyArr = [];\n\n    for (let i = 0; i < nodes.length; i += 1) {\n      const mem = nodes[i].data;\n      const full_name = (mem.first_name + \" \" + mem.last_name).toLowerCase();\n      if (full_name.includes(wordToSearch.toLowerCase())) {\n        copyArr.push(nodes[i]);\n      }\n    }\n    return copyArr;\n  }\n\n  const searchAddress = () => {\n    const copyArr = [];\n    for (let i = 0; i < nodes.length; i += 1) {\n      const mem = nodes[i].data;\n      const address = mem.address.toLowerCase();\n      if (address.includes(wordToSearch.toLowerCase())) {\n        copyArr.push(nodes[i]);\n      }\n    }\n    return copyArr;\n  }\n\n\n  const submitPressedHandler = (typeOfSearch) => {\n    setOutput([]);\n    if (wordToSearch === \"\") { return; }\n    let copyArr = [];\n    if (typeOfSearch === \"Search by name\") {\n      copyArr = searchName();\n    }\n    else if (typeOfSearch === \"Search by address\") {\n      copyArr = searchAddress();\n    }\n    setOutput(copyArr);\n  }\n\n  const getRelative = (node, relation) => {\n    if (output.indexOf(node[relation]) === -1) {\n      if (node[relation] != null) {\n        let copyArr = [...output, node[relation]];\n        setOutput(copyArr);\n      }\n    }\n  }\n\n  const getChildrenHandler = (node) => {\n    let copyArr = [...output];\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (output.indexOf(child) === -1) {\n        copyArr.push(child);\n      }\n    }\n    setOutput(copyArr);\n  }\n\n  const getAncestors = (node) => {\n    let count = 0;\n    setOutput([]);\n    let copyArr = [node];\n    console.log(\"[getAncestors] Added last descendent:\"+node.data.first_name)\n    let curr = node;\n    while (curr.father !== null && count<=20) {\n      curr = curr.father\n      console.log(\"[getAncestors] father is:\"+curr.data.first_name)\n      copyArr.unshift(curr)\n      count+=1;\n    }\n    setOutput(copyArr);\n  }\n\n\n  const nameInputHandler = (event) => {\n    setWordToSearch(event.target.value);\n  }\n\n  const clearPressedHandler = () => {\n    setOutput(null);\n    setOutput([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu />\n      <br />\n      <br />\n      <br />\n      <Toolbar\n        className={styles.Toolbar}\n        nameInputHandler={nameInputHandler}\n        submitPressedHandler={submitPressedHandler}\n        clearPressedHandler={clearPressedHandler}\n      />\n      <Modal\n        show={!authorized}\n        modalClosed={login}>\n        <label>Username:</label>\n        <input type=\"text\" onChange={usernameInputHandler} />\n        <br />\n        <label>Password:</label>\n        <input type=\"password\" onChange={passwordInputHandler} />\n        <br />\n        <br />\n        <button onClick={login}>Login</button>\n      </Modal>\n      <Output persons={output}\n        getChildrenHandler={getChildrenHandler}\n        getRelative={getRelative}\n        getAncestors={getAncestors} />\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}